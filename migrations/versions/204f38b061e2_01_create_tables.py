"""empty message

Revision ID: 204f38b061e2
Revises: 
Create Date: 2019-03-21 15:24:22.789063

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '204f38b061e2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resource', sa.String(length=64), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('operation', sa.String(length=256), nullable=False),
    sa.Column('event', sa.JSON(), nullable=True),
    sa.Column('reference', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_audits_operation'), 'audits', ['operation'], unique=False)
    op.create_index(op.f('ix_audits_resource'), 'audits', ['resource'], unique=False)
    op.create_index(op.f('ix_audits_resource_id'), 'audits', ['resource_id'], unique=False)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('namespace', sa.String(length=64), nullable=True),
    sa.Column('ledger_passwd', sa.String(length=32), nullable=True),
    sa.Column('ledger_files', sa.BLOB(), nullable=True),
    sa.Column('introduction', mysql.MEDIUMTEXT(), nullable=True),
    sa.Column('localization', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('role', sa.Enum('none', 'requester', 'provider', 'both', name='organizationrole'), nullable=False),
    sa.Column('state', sa.Enum('deleted', 'active', 'locked', name='organizationstate'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_index(op.f('ix_organizations_namespace'), 'organizations', ['namespace'], unique=True)
    op.create_index(op.f('ix_organizations_region'), 'organizations', ['region'], unique=False)
    op.create_index(op.f('ix_organizations_role'), 'organizations', ['role'], unique=False)
    op.create_index(op.f('ix_organizations_state'), 'organizations', ['state'], unique=False)
    op.create_table('requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.String(length=64), nullable=False),
    sa.Column('namespace', sa.String(length=64), nullable=True),
    sa.Column('resource', sa.String(length=64), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('comments', sa.JSON(), nullable=True),
    sa.Column('state', sa.Enum('deleted', 'pending', 'reviewing', 'rejected', 'accepted', name='requeststate'), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('accepted_by', sa.Integer(), nullable=True),
    sa.Column('accepted_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_requests_accepted_by'), 'requests', ['accepted_by'], unique=False)
    op.create_index(op.f('ix_requests_created_by'), 'requests', ['created_by'], unique=False)
    op.create_index(op.f('ix_requests_namespace'), 'requests', ['namespace'], unique=False)
    op.create_index(op.f('ix_requests_request_type'), 'requests', ['request_type'], unique=False)
    op.create_index(op.f('ix_requests_resource'), 'requests', ['resource'], unique=False)
    op.create_index(op.f('ix_requests_resource_id'), 'requests', ['resource_id'], unique=False)
    op.create_index(op.f('ix_requests_state'), 'requests', ['state'], unique=False)
    op.create_table('certs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('namespace', sa.String(length=64), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('fingerprint', sa.String(length=512), nullable=True),
    sa.Column('state', sa.Enum('deleted', 'active', name='certstate'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['namespace'], ['organizations.namespace'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_certs_fingerprint'), 'certs', ['fingerprint'], unique=True)
    op.create_index(op.f('ix_certs_state'), 'certs', ['state'], unique=False)
    op.create_table('fields',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('canonical_name', sa.String(length=64), nullable=False),
    sa.Column('namespace', sa.String(length=64), nullable=False),
    sa.Column('definition', sa.JSON(), nullable=True),
    sa.Column('introduction', mysql.MEDIUMTEXT(), nullable=True),
    sa.Column('localization', sa.JSON(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['namespace'], ['organizations.namespace'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('namespace', 'canonical_name', 'region', 'version'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_fields_canonical_name'), 'fields', ['canonical_name'], unique=False)
    op.create_index(op.f('ix_fields_name'), 'fields', ['name'], unique=False)
    op.create_index(op.f('ix_fields_region'), 'fields', ['region'], unique=False)
    op.create_table('specs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('canonical_name', sa.String(length=64), nullable=False),
    sa.Column('namespace', sa.String(length=64), nullable=False),
    sa.Column('definition', sa.JSON(), nullable=True),
    sa.Column('introduction', mysql.MEDIUMTEXT(), nullable=True),
    sa.Column('localization', sa.JSON(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('reference', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('state', sa.Enum('offline', 'online', name='specstate'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('last_beat_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['namespace'], ['organizations.namespace'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('namespace', 'canonical_name', 'region', 'version'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_specs_canonical_name'), 'specs', ['canonical_name'], unique=False)
    op.create_index(op.f('ix_specs_name'), 'specs', ['name'], unique=False)
    op.create_index(op.f('ix_specs_reference'), 'specs', ['reference'], unique=False)
    op.create_index(op.f('ix_specs_region'), 'specs', ['region'], unique=False)
    op.create_index(op.f('ix_specs_state'), 'specs', ['state'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('namespace', sa.String(length=64), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('state', sa.Enum('pending', 'active', 'locked', name='userstate'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['namespace'], ['organizations.namespace'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_row_format='DYNAMIC'
    )
    op.create_index(op.f('ix_users_namespace'), 'users', ['namespace'], unique=False)
    op.create_index(op.f('ix_users_state'), 'users', ['state'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_state'), table_name='users')
    op.drop_index(op.f('ix_users_namespace'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_specs_state'), table_name='specs')
    op.drop_index(op.f('ix_specs_region'), table_name='specs')
    op.drop_index(op.f('ix_specs_reference'), table_name='specs')
    op.drop_index(op.f('ix_specs_name'), table_name='specs')
    op.drop_index(op.f('ix_specs_canonical_name'), table_name='specs')
    op.drop_table('specs')
    op.drop_index(op.f('ix_fields_region'), table_name='fields')
    op.drop_index(op.f('ix_fields_name'), table_name='fields')
    op.drop_index(op.f('ix_fields_canonical_name'), table_name='fields')
    op.drop_table('fields')
    op.drop_index(op.f('ix_certs_state'), table_name='certs')
    op.drop_index(op.f('ix_certs_fingerprint'), table_name='certs')
    op.drop_table('certs')
    op.drop_index(op.f('ix_requests_state'), table_name='requests')
    op.drop_index(op.f('ix_requests_resource_id'), table_name='requests')
    op.drop_index(op.f('ix_requests_resource'), table_name='requests')
    op.drop_index(op.f('ix_requests_request_type'), table_name='requests')
    op.drop_index(op.f('ix_requests_namespace'), table_name='requests')
    op.drop_index(op.f('ix_requests_created_by'), table_name='requests')
    op.drop_index(op.f('ix_requests_accepted_by'), table_name='requests')
    op.drop_table('requests')
    op.drop_index(op.f('ix_organizations_state'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_role'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_region'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_namespace'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_audits_resource_id'), table_name='audits')
    op.drop_index(op.f('ix_audits_resource'), table_name='audits')
    op.drop_index(op.f('ix_audits_operation'), table_name='audits')
    op.drop_table('audits')
    # ### end Alembic commands ###
